{"ast":null,"code":"var _jsxFileName = \"/home/shubham/work/scratchApp/frontend/src/components/ListGroup.tsx\";\nimport \"./ListGroup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ListGroup() {\n  let testFiles = [{\n    id: 1,\n    name: \"src\",\n    type: \"folder\",\n    updated_at: \"2019-06-11 21:24:00\",\n    latestCommit: {\n      message: \"Initial commit\"\n    }\n  }, {\n    id: 2,\n    name: \"tests\",\n    type: \"folder\",\n    updated_at: \"2019-07-11 21:24:00\",\n    latestCommit: {\n      message: \"Initial commit\"\n    }\n  }, {\n    id: 3,\n    name: \"README\",\n    type: \"file\",\n    updated_at: \"2019-07-18 21:24:00\",\n    latestCommit: {\n      message: \"Added a readme\"\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"list-group\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: testFiles.map(file => /*#__PURE__*/_jsxDEV(FileListItem, {\n        file: file\n      }, file.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = ListGroup;\nfunction FileListItem({\n  file\n}) {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"file-list-item\",\n    children: [/*#__PURE__*/_jsxDEV(FileName, {\n      file: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Time, {\n      timestamp: file.updated_at\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_c2 = FileListItem;\nconst FileName = ({\n  file\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(FileIcon, {\n    file: file\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    className: \"file-name\",\n    children: [\" \", file.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n_c3 = FileName;\nfunction FileIcon({\n  file\n}) {\n  let icon = \"fa-file-text-o\";\n  if (file.type === \"folder\") {\n    icon = \"fa-folder\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: \"file-icon\",\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      className: `fa ${icon}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_c4 = FileIcon;\nconst Time = ({\n  timestamp\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    className: \"time\",\n    children: timestamp\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n};\n_c5 = Time;\nexport default ListGroup;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"ListGroup\");\n$RefreshReg$(_c2, \"FileListItem\");\n$RefreshReg$(_c3, \"FileName\");\n$RefreshReg$(_c4, \"FileIcon\");\n$RefreshReg$(_c5, \"Time\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","ListGroup","testFiles","id","name","type","updated_at","latestCommit","message","className","children","map","file","FileListItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","FileName","Time","timestamp","_c2","FileIcon","_c3","icon","_c4","_c5","$RefreshReg$"],"sources":["/home/shubham/work/scratchApp/frontend/src/components/ListGroup.tsx"],"sourcesContent":["import \"./ListGroup.css\"\nfunction ListGroup() {\n  let testFiles = [\n    {\n      id: 1,\n      name: \"src\",\n      type: \"folder\",\n      updated_at: \"2019-06-11 21:24:00\",\n      latestCommit: {\n        message: \"Initial commit\",\n      },\n    },\n    {\n      id: 2,\n      name: \"tests\",\n      type: \"folder\",\n      updated_at: \"2019-07-11 21:24:00\",\n      latestCommit: {\n        message: \"Initial commit\",\n      },\n    },\n    {\n      id: 3,\n      name: \"README\",\n      type: \"file\",\n      updated_at: \"2019-07-18 21:24:00\",\n      latestCommit: {\n        message: \"Added a readme\",\n      },\n    },\n  ];\n  \n  return (\n    <table className=\"list-group\">\n      <tbody>\n        {testFiles.map((file) => (\n          <FileListItem key={file.id} file={file} />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nfunction FileListItem({file}) {\n  return (\n    <tr className={\"file-list-item\"}>\n      <FileName file={file} />\n      <Time timestamp={file.updated_at} />\n    </tr>\n  );\n}\n\nconst FileName = ({ file }) => (\n  <>\n    <FileIcon file={file} />\n    <td className={\"file-name\"}> {file.name}</td>\n  </>\n);\n\nfunction FileIcon({ file }) {\n  let icon = \"fa-file-text-o\";\n\n  if (file.type === \"folder\") {\n    icon = \"fa-folder\";\n  }\n\n  return (\n    <td className={\"file-icon\"}>\n      <i className={`fa ${icon}`} />\n    </td>\n  );\n}\n\nconst Time = ({ timestamp }) => {\n  return <td className={\"time\"}>{timestamp}</td>;\n};\n\nexport default ListGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}